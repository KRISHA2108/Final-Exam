import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'controller/product_controller.dart';
import 'helper/db_helper.dart';
import 'model/product_model.dart';

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
   ProductController productController = Get.put(ProductController());

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('HomePage'),
        actions: [
          IconButton(
            icon: const Icon(Icons.shopping_cart),
            onPressed: () {
              Navigator.pushNamed(context, '/auction');
            },
          ),
        ],
      ),
      body: Obx(() {
        return ListView.builder(
          itemCount: productController.products.length,
          itemBuilder: (context, index) {
            final product = productController.products[index];
            return ListTile(
              title: Text(product.name),
              subtitle: Text("${product.category} - ${product.price}"),
              trailing: IconButton(
                icon: const Icon(Icons.delete),
                onPressed: () {
                  productController.deleteProduct(index);
                },
              ),
              onTap: () {
                productController.addToAuction(product);
              },
              onLongPress: () {
                productController.updateProduct(index, product);
              },
            );
          },
        );
      }),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          _showAddProductDialog(context, productController);
        },
        child: const Icon(Icons.add),
      ),
    );
  }

  void _showAddProductDialog(
      BuildContext context, ProductController productController) {
    TextEditingController nameController = TextEditingController();
    TextEditingController categoryController = TextEditingController();
    TextEditingController priceController = TextEditingController();

    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: const Text("Add Product"),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              TextField(
                controller: nameController,
                decoration: const InputDecoration(labelText: "Name"),
              ),
              TextField(
                controller: categoryController,
                decoration: const InputDecoration(labelText: "Category"),
              ),
              TextField(
                controller: priceController,
                decoration: const InputDecoration(labelText: "Price"),
                keyboardType: TextInputType.number,
              ),
            ],
          ),
          actions: [
            ElevatedButton(
              onPressed: () {
                productController.addProduct(
                  Product(
                    name: nameController.text,
                    category: categoryController.text,
                    price: double.parse(
                      priceController.text,
                    ),
                  ),
                );
                SQLHelper.instance.insertProduct(
                  Product(
                    name: nameController.text,
                    category: categoryController.text,
                    price: double.parse(
                      priceController.text,
                    ),
                  ),
                );
                Get.back();
              },
              child: const Text("Add"),
            ),
          ],
        );
      },
    );
  }
}
